ci:
    autofix_prs: false
    autoupdate_schedule: quarterly
repos:
        - repo: https://github.com/pre-commit/pre-commit-hooks
          rev: v5.0.0
          hooks:
                - id: check-yaml
                - id: end-of-file-fixer
                  exclude: \.txt$
                - id: trailing-whitespace  # Remove trailing whitespaces
                - id: check-merge-conflict

        # Fix common spelling mistakes
        - repo: https://github.com/codespell-project/codespell
          rev: v2.3.0
          hooks:
                - id: codespell
                  args: [
                    '--ignore-words-list', 'nd,alos,inout,theses',
                    '--ignore-regex', '\bhist\b',
                    '--'
                  ]
                  types_or: [python, rst, markdown]
                  files: ^(xdem|doc|tests)/

        # Replace relative imports (e.g. 'from . import georaster' -> 'from geoutils import georaster')
        - repo: https://github.com/MarcoGorelli/absolufy-imports
          rev: v0.3.1
          hooks:
                - id: absolufy-imports

        # Ruff linter and code formatter
        - repo: https://github.com/astral-sh/ruff-pre-commit
          # Ruff version.
          rev: v0.8.6
          hooks:
            # Run the linter.
            - id: ruff
            # Run the formatter.
            - id: ruff-format

        # Enable lint fixes with ruff
        - repo: https://github.com/astral-sh/ruff-pre-commit
          # Ruff version.
          rev: v0.8.6
          hooks:
            # Run the linter.
            - id: ruff
              args: [ --fix ]
            # Run the formatter.
            - id: ruff-format

        # To run ruff over Jupyter Notebooks
        - repo: https://github.com/astral-sh/ruff-pre-commit
          # Ruff version.
          rev: v0.8.6
          hooks:
            # Run the linter.
            - id: ruff
              types_or: [ python, pyi, jupyter ]
              args: [ --fix ]
            # Run the formatter.
            - id: ruff-format
              types_or: [ python, pyi, jupyter ]

        # Automatically upgrade syntax to a minimum version
        - repo: https://github.com/asottile/pyupgrade
          rev: v3.19.0
          hooks:
                - id: pyupgrade
                  args: [--py37-plus]

        # Various formattings
        - repo: https://github.com/pre-commit/pygrep-hooks
          rev: v1.10.0
          hooks:
                # Single backticks should apparently not be used
                - id: rst-backticks
                # Check that all directives end with double colon
                - id: rst-directive-colons
                  types: [text]
                  types_or: [python, rst]
                # Inline code should not touch normal text
                - id: rst-inline-touching-normal
                  types: [text]
                  types_or: [python, rst]
                # Eval should never be used (can do arbitrary code execution)
                - id: python-no-eval
                # Enforce the use of type annotations instead of docstring type comments
                - id: python-use-type-annotations

        # Add custom regex lints (see .relint.yml)
        - repo: https://github.com/codingjoe/relint
          rev: 3.3.1
          hooks:
                - id: relint
        - repo: local
          hooks:
                # Generate pip's requirements.txt from conda's environment.yml to ensure consistency
                - id: pip-to-conda
                  name: Generate pip dependency from conda
                  language: python
                  entry: .github/scripts/generate_pip_deps_from_conda.py
                  files: ^(environment.yml|requirements.txt)$
                  pass_filenames: false
                  additional_dependencies: [tomli, pyyaml]

        # Add license header to the source files
        - repo: local
          hooks:
            - id: add-license-header
              name: Add License Header
              entry: python .github/scripts/apply_license_header.py
              language: python
              files: \.py$
